{
  "info": {
    "_postman_id": "93d38be1-0402-46b3-aaf8-aa04406e03e9",
    "name": "Partie_2",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "34882950",
    "_collection_link": "https://wcs-project-postman.postman.co/workspace/WCS---Projet-Postman~36fbf20d-2352-4bc9-8d0b-340b57589dba/collection/34882950-93d38be1-0402-46b3-aaf8-aa04406e03e9?action=share&source=collection_link&creator=34882950"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Check Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {\r",
                  "    pm.expect(pm.response.code).eql(200);\r",
                  "})\r",
                  "\r",
                  "pm.test('Check response status id \"UP\"', function () {\r",
                  "    var responseJson = pm.response.json();\r",
                  "    pm.expect(responseJson.status).to.eql('UP')\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/status",
              "host": ["{{base_url}}"],
              "path": ["status"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get all products",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {\r",
                  "    pm.expect(pm.response.code).eql(200)\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Get one product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {\r",
                  "    pm.expect(pm.response.code).eql(200)\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/4643",
              "host": ["{{base_url}}"],
              "path": ["products", "4643"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Cart",
      "item": [
        {
          "name": "Create a new cart",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {\r",
                  "    pm.expect(pm.response.code).eql(201)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Check cartId\", () => {\r",
                  "    var responseJson = pm.response.json();\r",
                  "    pm.expect(responseJson.cartId)\r",
                  "    pm.collectionVariables.set('cartId', responseJson.cartId)\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/carts",
              "host": ["{{base_url}}"],
              "path": ["carts"]
            }
          },
          "response": []
        },
        {
          "name": "Get a cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {\r",
                  "    pm.expect(pm.response.code).eql(200)\r",
                  "})\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/carts/{{cartId}}",
              "host": ["{{base_url}}"],
              "path": ["carts", "{{cartId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Add an item",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {\r",
                  "    pm.expect(pm.response.code).eql(201)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Check itemId\", () => {\r",
                  "    var responseJson = pm.response.json();\r",
                  "    pm.expect(responseJson.itemId)\r",
                  "    pm.collectionVariables.set('itemId', responseJson.itemId)\r",
                  "})\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"productId\": \"4643\",\r\n    \"quantity\": 2\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/carts/{{cartId}}/items",
              "host": ["{{base_url}}"],
              "path": ["carts", "{{cartId}}", "items"]
            }
          },
          "response": []
        },
        {
          "name": "Get a cart items",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {\r",
                  "    pm.expect(pm.response.code).eql(200)\r",
                  "})\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/carts/{{cartId}}/items",
              "host": ["{{base_url}}"],
              "path": ["carts", "{{cartId}}", "items"]
            }
          },
          "response": []
        },
        {
          "name": "Modify an item",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {\r",
                  "    pm.expect(pm.response.code).eql(204)\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"quantity\": 5\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/carts/{{cartId}}/items/{{itemId}}",
              "host": ["{{base_url}}"],
              "path": ["carts", "{{cartId}}", "items", "{{itemId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Replace an item",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {\r",
                  "    pm.expect(pm.response.code).eql(204)\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"productId\": \"4641\",\r\n    \"quantity\": 1\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/carts/{{cartId}}/items/{{itemId}}",
              "host": ["{{base_url}}"],
              "path": ["carts", "{{cartId}}", "items", "{{itemId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Get all orders",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {\r",
                  "    pm.expect(pm.response.code).eql(200)\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{AuthToken}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "Create an order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', () => {\r",
                  "    pm.expect(pm.response.code).eql(201)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Check orderId\", () => {\r",
                  "    var responseJson = pm.response.json();\r",
                  "    pm.expect(responseJson.orderId)\r",
                  "    pm.collectionVariables.set('orderId', responseJson.orderId)\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "{{AuthToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"customerName\": \"{{customerName}}\",\r\n    \"comment\": \"{{comment}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "Get one order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {\r",
                  "    pm.expect(pm.response.code).eql(200)\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{AuthToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"invoice\": true\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/orders/{{orderId}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{orderId}}"]
            }
          },
          "response": []
        },
        {
          "name": "New Request",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {\r",
                  "    pm.expect(pm.response.code).eql(204)\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "{{AuthToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"customerName\": \"{{customerNameNew}}\",\r\n    \"comment\": \"{{commentNew}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/orders/{{orderId}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{orderId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete an order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function () {\r",
                  "    pm.expect(pm.response.code).eql(204)\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "{{AuthToken}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/orders/{{orderId}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{orderId}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://simple-grocery-store-api.glitch.me",
      "type": "string"
    },
    {
      "key": "cartId",
      "value": ""
    },
    {
      "key": "itemId",
      "value": ""
    },
    {
      "key": "orderId",
      "value": ""
    }
  ]
}
